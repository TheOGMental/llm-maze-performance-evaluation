INPUT:
<ADJLIST_START> ( 0 , 3 ) <--> SOUTH ( 1 , 4 ) <--> NORTH ( 1 , 0 ) <--> SOUTH ( 1 , 4 ) <--> SOUTH ( 2 , 1 ) <--> SOUTH ( 3 , 2 ) <--> NORTH ( 2 , 3 ) <--> SOUTH ( 2 , 4 ) <--> SOUTH ( 4 , 1 ) <--> NORTH ( 3 , 2 ) <--> SOUTH ( 4 , 3 ) <--> NORTH ( 3 , 4 ) <--> SOUTH ( 0 , 4 ) <--> WEST ( 1 , 0 ) <--> EAST ( 1 , 1 ) <--> EAST ( 1 , 3 ) <--> WEST ( 2 , 0 ) <--> EAST ( 4 , 2 ) <--> WEST ( 4 , 4 ) <--> WEST <ADJLIST_END> <ORIGIN_START> ( 1 , 3 ) <ORIGIN_END> <TARGET_START> ( 0 , 3 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 1 , 3 ) NORTH ( 0 , 3 ) <PATH_END>

OUTPUT:
To find a path from the origin (1, 3) to the target (0, 3) in the given maze, we can follow these steps:

1. From (1, 3), we can move WEST to (1, 2), but (1, 2) is not in the adjacency list, so this is not possible. Alternatively, we can move EAST to (1, 4).
2. From (1, 4), we can move NORTH to (0, 4).
3. From (0, 4), we can move WEST to (0, 3), which is our target.

Here is the path:
<PATH_START> (1, 3) EAST (1, 4) NORTH (0, 4) WEST (0, 3) <PATH_END>

HUMAN VERIFICATION: