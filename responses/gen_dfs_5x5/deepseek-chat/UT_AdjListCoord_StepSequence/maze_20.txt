INPUT:
<ADJLIST_START> (1,1) <--> (1,2) ; (2,2) <--> (3,2) ; (4,1) <--> (3,1) ; (3,3) <--> (3,2) ; (0,2) <--> (1,2) ; (3,4) <--> (4,4) ; (0,4) <--> (1,4) ; (3,4) <--> (3,3) ; (4,2) <--> (4,1) ; (3,0) <--> (4,0) ; (2,3) <--> (2,4) ; (2,4) <--> (1,4) ; (0,3) <--> (0,4) ; (4,4) <--> (4,3) ; (0,2) <--> (0,3) ; (4,2) <--> (4,3) ; (3,0) <--> (3,1) ; (0,1) <--> (1,1) ; (2,3) <--> (2,2) ; <ADJLIST_END> <ORIGIN_START> (4,1) <ORIGIN_END> <TARGET_START> (0,3) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (4,1) (4,2) (4,3) (4,4) (3,4) (3,3) (3,2) (2,2) (2,3) (2,4) (1,4) (0,4) (0,3) <PATH_END>

OUTPUT:
To find a path from the origin (4,1) to the target (0,3) in the given maze, we can follow these steps using the adjacency list provided:

1. Start at (4,1).
2. From (4,1), we can move to (4,2) or (3,1).
3. Choose (3,1) to move closer to the top of the maze.
4. From (3,1), we can move to (3,0) or (4,1) or (3,2).
5. Choose (3,2) to move towards the center.
6. From (3,2), we can move to (2,2), (3,1), or (3,3).
7. Choose (2,2) to move towards the top.
8. From (2,2), we can move to (3,2) or (2,3) or (1,2).
9. Choose (1,2) to move closer to the target.
10. From (1,2), we can move to (2,2) or (1,1) or (0,2).
11. Choose (0,2) to move directly towards the target.
12. From (0,2), we can move to (1,2) or (0,1) or (0,3).
13. Choose (0,3) to reach the target.

Here is the path:
<PATH_START> (4,1) (3,1) (3,2) (2,2) (1,2) (0,2) (0,3) <PATH_END>

HUMAN VERIFICATION: F