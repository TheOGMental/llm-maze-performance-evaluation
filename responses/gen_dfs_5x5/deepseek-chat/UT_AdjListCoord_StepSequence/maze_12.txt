INPUT:
<ADJLIST_START> (4,3) <--> (4,4) ; (4,0) <--> (3,0) ; (3,2) <--> (3,3) ; (3,2) <--> (4,2) ; (4,1) <--> (4,2) ; (3,4) <--> (4,4) ; (4,1) <--> (4,0) ; (3,3) <--> (3,4) ; <ADJLIST_END> <ORIGIN_START> (4,3) <ORIGIN_END> <TARGET_START> (3,2) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (4,3) (4,4) (3,4) (3,3) (3,2) <PATH_END>

OUTPUT:
To find a path from the origin (4,3) to the target (3,2) in the given maze, we can follow these steps using the adjacency list provided:

### Adjacency List:
- (4,3) <--> (4,4)
- (4,0) <--> (3,0)
- (3,2) <--> (3,3)
- (3,2) <--> (4,2)
- (4,1) <--> (4,2)
- (3,4) <--> (4,4)
- (4,1) <--> (4,0)
- (3,3) <--> (3,4)

### Step-by-Step Path:
1. Start at the origin: (4,3)
2. From (4,3), move to (4,4) (connected directly).
3. From (4,4), move to (3,4) (connected directly).
4. From (3,4), move to (3,3) (connected directly).
5. From (3,3), move to (3,2) (connected directly), which is the target.

### Final Path:
(4,3) -> (4,4) -> (3,4) -> (3,3) -> (3,2)

This path successfully navigates from the origin (4,3) to the target (3,2) using the given connections in the maze.

HUMAN VERIFICATION: T