INPUT:
<ADJLIST_START> (0,4) <--> (0,3) ; (2,3) <--> (3,3) ; (4,4) <--> (4,3) ; (1,1) <--> (1,2) ; (1,3) <--> (2,3) ; (1,4) <--> (0,4) ; (1,1) <--> (0,1) ; (4,3) <--> (3,3) ; (4,4) <--> (3,4) ; (0,3) <--> (0,2) ; (1,4) <--> (1,3) ; (0,2) <--> (1,2) ; (3,4) <--> (2,4) ; <ADJLIST_END> <ORIGIN_START> (2,4) <ORIGIN_END> <TARGET_START> (3,4) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (2,4) (3,4) <PATH_END>

OUTPUT:
To find a path from the origin (2,4) to the target (3,4) in the given maze, we can follow these steps:

1. Start at (2,4).
2. From (2,4), the adjacent nodes are (3,4) (which is the target) and possibly others based on the adjacency list. 

Looking at the adjacency list, we see:
- (2,4) <--> (3,4) is directly connected.

Thus, the shortest path is directly from (2,4) to (3,4).

### Path:
<PATH_START> (2,4) (3,4) <PATH_END>

HUMAN VERIFICATION: T