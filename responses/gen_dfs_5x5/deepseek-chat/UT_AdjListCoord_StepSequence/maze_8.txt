INPUT:
<ADJLIST_START> (4,2) <--> (3,2) ; (4,2) <--> (4,1) ; (3,0) <--> (4,0) ; (2,0) <--> (3,0) ; (3,3) <--> (4,3) ; (1,0) <--> (0,0) ; (1,2) <--> (0,2) ; (4,3) <--> (4,4) ; (1,3) <--> (1,4) ; (1,3) <--> (1,2) ; (4,0) <--> (4,1) ; (3,4) <--> (2,4) ; (0,4) <--> (0,3) ; (3,2) <--> (3,3) ; (1,0) <--> (2,0) ; (0,3) <--> (0,2) ; (4,4) <--> (3,4) ; (1,4) <--> (2,4) ; <ADJLIST_END> <ORIGIN_START> (4,0) <ORIGIN_END> <TARGET_START> (2,0) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (4,0) (3,0) (2,0) <PATH_END>

OUTPUT:
To find a path from the origin (4,0) to the target (2,0) in the given maze, we can use the adjacency list to explore possible routes. Here's one possible path:

### Path:
1. Start at (4,0)
2. Move to (3,0) — connected via (4,0) <--> (3,0)
3. Move to (2,0) — connected via (3,0) <--> (2,0)

### Full Path:
(4,0) → (3,0) → (2,0)

This is the shortest path from the origin to the target, consisting of just two moves. Here's the breakdown:
- From (4,0), the only connected cell is (3,0).
- From (3,0), the only connected cell leading toward the target is (2,0), which is the target itself. 

Thus, the path is straightforward. 

### Final Answer:
<PATH_START> (4,0) (3,0) (2,0) <PATH_END>

HUMAN VERIFICATION: