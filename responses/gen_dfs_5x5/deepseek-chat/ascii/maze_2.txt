INPUT:
###########
#    E    #
# ####### #
#S  #   # #
### # ### #
# # # #   #
##### # ###
# # # # # #
##### # ###
# # #   # #
###########

EXPECTED SOLUTION:
###########
#XXXXE    #
#X####### #
#S  #   # #
### # ### #
# # # #   #
##### # ###
# # # # # #
##### # ###
# # #   # #
###########

OUTPUT:
To solve the given maze, we'll find a path from the origin `S` (start) to the target `E` (end). Here's the maze for reference:

```
###########
#    E    #
# ####### #
#S  #   # #
### # ### #
# # # #   #
##### # ###
# # # # # #
##### # ###
# # #   # #
###########
```

### Step-by-Step Solution:

1. **Start at `S`**: Located at the position (3, 1) if we consider the top-left corner as (0, 0).
2. **Move Up**: From `S` at (3, 1), move up to (2, 1).
   - (2, 1) is an empty space.
3. **Move Left**: From (2, 1), move left to (2, 0).
   - (2, 0) is a wall (`#`), so this is invalid.
4. **Move Right**: From (2, 1), move right to (2, 2).
   - (2, 2) is a wall (`#`), so this is invalid.
5. **Move Down**: From (2, 1), move down to (3, 1).
   - This brings us back to `S`, so this is invalid.
6. **Alternative from `S`**: From `S` at (3, 1), move right to (3, 2).
   - (3, 2) is an empty space.
7. **Move Right Again**: From (3, 2), move right to (3, 3).
   - (3, 3) is a wall (`#`), so this is invalid.
8. **Move Up**: From (3, 2), move up to (2, 2).
   - (2, 2) is a wall (`#`), so this is invalid.
9. **Move Down**: From (3, 2), move down to (4, 2).
   - (4, 2) is a wall (`#`), so this is invalid.
10. **Alternative from `S`**: From `S` at (3, 1), move down to (4, 1).
    - (4, 1) is an empty space.
11. **Move Down**: From (4, 1), move down to (5, 1).
    - (5, 1) is an empty space.
12. **Move Left**: From (5, 1), move left to (5, 0).
    - (5, 0) is a wall (`#`), so this is invalid.
13. **Move Right**: From (5, 1), move right to (5, 2).
    - (5, 2) is a wall (`#`), so this is invalid.
14. **Move Down**: From (5, 1), move down to (6, 1).
    - (6, 1) is a wall (`#`), so this is invalid.
15. **Move Up**: From (5, 1), move up to (4, 1).
    - This brings us back, so this is invalid.
16. **Alternative from (4, 1)**: From (4, 1), move right to (4, 2).
    - (4, 2) is a wall (`#`), so this is invalid.
17. **Alternative from (4, 1)**: From (4, 1), move left to (4, 0).
    - (4, 0) is a wall (`#`), so this is invalid.
18. **Alternative from `S`**: From `S` at (3, 1), the only viable move is right to (3, 2), but we've hit a dead end. Let's try another approach.

### Correct Path:
The correct path from `S` to `E` is as follows:
1. Start at `S` (3, 1).
2. Move right to (3, 2).
3. Move up to (2, 2) - but this is a wall, so this path is invalid.
4. Alternative: From `S` (3, 1), move up to (2, 1).
5. From (2, 1), move left to (2, 0) - wall.
6. From (2, 1), move right to (2, 2) - wall.
7. From (2, 1), move up to (1, 1).
   - (1, 1) is an empty space.
8. From (1, 1), move left to (1, 0) - wall.
9. From (1, 1), move right to (1, 2).
   - (1, 2) is an empty space.
10. Continue moving right to (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9).
    - (1, 9) is `E`.

### Final Path:
The path from `S` to `E` is:
- Right from `S` (3, 1) to (3, 2).
- Up to (2, 2) - wall, so this path is invalid.
- Alternative: From `S` (3, 1), up to (2, 1), then up to (1, 1), then right to (1, 2), (1, 3), ..., (1, 9) where `E` is located.

However, looking at the maze again, the correct path is:
1. From `S` (3, 1), move up to (2, 1).
2. From (2, 1), move up to (1, 1).
3. From (1, 1), move right to (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9) where `E` is.

### Path Coordinates:
- (3, 1) → (2, 1) → (1, 1) → (1, 2) → (1, 3) → (1, 4) → (1, 5) → (1, 6) → (1, 7) → (1, 8) → (1, 9)

### Directions:
- Up, Up, Right, Right, Right, Right, Right, Right, Right, Right.

### Visual Path:
```
###########
#....E    #
#.####### #
#S  #   # #
### # ### #
# # # #   #
##### # ###
# # # # # #
##### # ###
# # #   # #
###########
```

HUMAN VERIFICATION: T