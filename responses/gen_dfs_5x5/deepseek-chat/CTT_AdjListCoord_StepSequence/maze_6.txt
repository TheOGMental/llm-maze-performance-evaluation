INPUT:
<ADJLIST_START> ( 2 , 1 ) <--> ( 2 , 0 ) ; ( 0 , 2 ) <--> ( 1 , 2 ) ; ( 0 , 1 ) <--> ( 1 , 1 ) ; ( 0 , 4 ) <--> ( 0 , 3 ) ; ( 4 , 3 ) <--> ( 3 , 3 ) ; ( 0 , 0 ) <--> ( 0 , 1 ) ; ( 1 , 1 ) <--> ( 1 , 2 ) ; ( 3 , 4 ) <--> ( 2 , 4 ) ; ( 1 , 4 ) <--> ( 2 , 4 ) ; ( 1 , 0 ) <--> ( 2 , 0 ) ; ( 1 , 3 ) <--> ( 0 , 3 ) ; ( 4 , 2 ) <--> ( 4 , 1 ) ; ( 0 , 0 ) <--> ( 1 , 0 ) ; ( 3 , 2 ) <--> ( 2 , 2 ) ; ( 3 , 1 ) <--> ( 4 , 1 ) ; ( 2 , 1 ) <--> ( 3 , 1 ) ; ( 1 , 3 ) <--> ( 2 , 3 ) ; ( 4 , 4 ) <--> ( 3 , 4 ) ; ( 4 , 2 ) <--> ( 3 , 2 ) ; ( 2 , 2 ) <--> ( 2 , 3 ) ; ( 4 , 4 ) <--> ( 4 , 3 ) ; ( 0 , 4 ) <--> ( 1 , 4 ) ; <ADJLIST_END> <ORIGIN_START> ( 0 , 0 ) <ORIGIN_END> <TARGET_START> ( 1 , 3 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 0 , 0 ) ( 1 , 0 ) ( 2 , 0 ) ( 2 , 1 ) ( 3 , 1 ) ( 4 , 1 ) ( 4 , 2 ) ( 3 , 2 ) ( 2 , 2 ) ( 2 , 3 ) ( 1 , 3 ) <PATH_END>

OUTPUT:
To find a path from the origin (0, 0) to the target (1, 3) in the given maze, we can follow these steps using the adjacency list provided:

### Adjacency List Connections:
1. (0, 0) <--> (0, 1)
2. (0, 0) <--> (1, 0)
3. (0, 1) <--> (1, 1)
4. (1, 0) <--> (2, 0)
5. (2, 0) <--> (2, 1)
6. (2, 1) <--> (3, 1)
7. (3, 1) <--> (4, 1)
8. (4, 1) <--> (4, 2)
9. (4, 2) <--> (3, 2)
10. (3, 2) <--> (2, 2)
11. (2, 2) <--> (2, 3)
12. (2, 3) <--> (1, 3)
13. (1, 3) <--> (0, 3)
14. (0, 3) <--> (0, 4)
15. (0, 4) <--> (1, 4)
16. (1, 4) <--> (2, 4)
17. (2, 4) <--> (3, 4)
18. (3, 4) <--> (4, 4)
19. (4, 4) <--> (4, 3)
20. (4, 3) <--> (3, 3)
21. (1, 1) <--> (1, 2)
22. (1, 2) <--> (0, 2)
23. (2, 2) <--> (2, 3)

### Possible Path:
One possible path from (0, 0) to (1, 3) is:

1. Start at (0, 0).
2. Move to (1, 0) via (0, 0) <--> (1, 0).
3. Move to (2, 0) via (1, 0) <--> (2, 0).
4. Move to (2, 1) via (2, 0) <--> (2, 1).
5. Move to (3, 1) via (2, 1) <--> (3, 1).
6. Move to (4, 1) via (3, 1) <--> (4, 1).
7. Move to (4, 2) via (4, 1) <--> (4, 2).
8. Move to (3, 2) via (4, 2) <--> (3, 2).
9. Move to (2, 2) via (3, 2) <--> (2, 2).
10. Move to (2, 3) via (2, 2) <--> (2, 3).
11. Move to (1, 3) via (2, 3) <--> (1, 3).

### Final Path:
(0, 0) → (1, 0) → (2, 0) → (2, 1) → (3, 1) → (4, 1) → (4, 2) → (3, 2) → (2, 2) → (2, 3) → (1, 3)

This path successfully navigates from the origin (0, 0) to the target (1, 3) using the given maze connections.

HUMAN VERIFICATION: