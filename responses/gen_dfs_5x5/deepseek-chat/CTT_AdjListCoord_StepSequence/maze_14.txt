INPUT:
<ADJLIST_START> ( 3 , 3 ) <--> ( 3 , 2 ) ; ( 4 , 1 ) <--> ( 3 , 1 ) ; ( 3 , 1 ) <--> ( 3 , 0 ) ; ( 3 , 0 ) <--> ( 4 , 0 ) ; ( 4 , 3 ) <--> ( 4 , 2 ) ; ( 3 , 3 ) <--> ( 3 , 4 ) ; ( 4 , 2 ) <--> ( 4 , 1 ) ; ( 4 , 4 ) <--> ( 3 , 4 ) ; ( 4 , 4 ) <--> ( 4 , 3 ) ; <ADJLIST_END> <ORIGIN_START> ( 3 , 3 ) <ORIGIN_END> <TARGET_START> ( 3 , 0 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 3 , 3 ) ( 3 , 4 ) ( 4 , 4 ) ( 4 , 3 ) ( 4 , 2 ) ( 4 , 1 ) ( 3 , 1 ) ( 3 , 0 ) <PATH_END>

OUTPUT:
To find a path from the origin (3, 3) to the target (3, 0) in the given maze, we can follow the adjacency list provided. Here's the step-by-step path:

1. Start at (3, 3).
2. From (3, 3), move to (3, 2) (since (3, 3) <--> (3, 2)).
3. From (3, 2), there are no direct connections listed, so we backtrack to (3, 3).
4. From (3, 3), move to (3, 4) (since (3, 3) <--> (3, 4)).
5. From (3, 4), move to (4, 4) (since (4, 4) <--> (3, 4)).
6. From (4, 4), move to (4, 3) (since (4, 4) <--> (4, 3)).
7. From (4, 3), move to (4, 2) (since (4, 3) <--> (4, 2)).
8. From (4, 2), move to (4, 1) (since (4, 2) <--> (4, 1)).
9. From (4, 1), move to (3, 1) (since (4, 1) <--> (3, 1)).
10. From (3, 1), move to (3, 0) (since (3, 1) <--> (3, 0)).

Thus, the path from the origin (3, 3) to the target (3, 0) is:
<PATH_START> (3, 3) (3, 4) (4, 4) (4, 3) (4, 2) (4, 1) (3, 1) (3, 0) <PATH_END>

HUMAN VERIFICATION: T