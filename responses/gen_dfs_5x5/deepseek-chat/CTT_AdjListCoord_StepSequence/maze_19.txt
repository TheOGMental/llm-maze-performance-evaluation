INPUT:
<ADJLIST_START> ( 1 , 3 ) <--> ( 0 , 3 ) ; ( 3 , 4 ) <--> ( 3 , 3 ) ; ( 3 , 0 ) <--> ( 4 , 0 ) ; ( 1 , 2 ) <--> ( 2 , 2 ) ; ( 2 , 0 ) <--> ( 1 , 0 ) ; ( 0 , 3 ) <--> ( 0 , 2 ) ; ( 0 , 2 ) <--> ( 0 , 1 ) ; ( 3 , 1 ) <--> ( 4 , 1 ) ; ( 0 , 1 ) <--> ( 0 , 0 ) ; ( 1 , 1 ) <--> ( 2 , 1 ) ; ( 2 , 2 ) <--> ( 3 , 2 ) ; ( 4 , 1 ) <--> ( 4 , 2 ) ; ( 2 , 3 ) <--> ( 3 , 3 ) ; ( 3 , 4 ) <--> ( 4 , 4 ) ; ( 2 , 4 ) <--> ( 2 , 3 ) ; ( 4 , 3 ) <--> ( 4 , 4 ) ; ( 3 , 0 ) <--> ( 2 , 0 ) ; ( 1 , 2 ) <--> ( 1 , 1 ) ; ( 0 , 0 ) <--> ( 1 , 0 ) ; ( 4 , 3 ) <--> ( 4 , 2 ) ; ( 2 , 4 ) <--> ( 1 , 4 ) ; ( 2 , 1 ) <--> ( 3 , 1 ) ; ( 1 , 3 ) <--> ( 1 , 4 ) ; <ADJLIST_END> <ORIGIN_START> ( 1 , 0 ) <ORIGIN_END> <TARGET_START> ( 4 , 0 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 1 , 0 ) ( 2 , 0 ) ( 3 , 0 ) ( 4 , 0 ) <PATH_END>

OUTPUT:
To find a path from the origin (1, 0) to the target (4, 0) in the given maze, we can follow these steps based on the adjacency list provided:

1. Start at (1, 0).
2. From (1, 0), the adjacent cells are (0, 0) and (2, 0). Let's choose (2, 0).
3. From (2, 0), the adjacent cells are (1, 0) and (3, 0). Let's choose (3, 0).
4. From (3, 0), the adjacent cells are (2, 0) and (4, 0).
5. Move to (4, 0), which is the target.

Here is the path:
<PATH_START> (1, 0) (2, 0) (3, 0) (4, 0) <PATH_END>

HUMAN VERIFICATION: T