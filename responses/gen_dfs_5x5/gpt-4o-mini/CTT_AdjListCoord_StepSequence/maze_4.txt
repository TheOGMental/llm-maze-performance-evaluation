INPUT:
<ADJLIST_START> ( 1 , 1 ) <--> ( 0 , 1 ) ; ( 0 , 4 ) <--> ( 1 , 4 ) ; ( 0 , 0 ) <--> ( 0 , 1 ) ; ( 2 , 4 ) <--> ( 1 , 4 ) ; ( 2 , 2 ) <--> ( 2 , 3 ) ; ( 2 , 2 ) <--> ( 1 , 2 ) ; ( 0 , 3 ) <--> ( 0 , 4 ) ; ( 1 , 1 ) <--> ( 1 , 2 ) ; ( 2 , 4 ) <--> ( 2 , 3 ) ; ( 0 , 3 ) <--> ( 0 , 2 ) ; <ADJLIST_END> <ORIGIN_START> ( 2 , 3 ) <ORIGIN_END> <TARGET_START> ( 0 , 0 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 2 , 3 ) ( 2 , 2 ) ( 1 , 2 ) ( 1 , 1 ) ( 0 , 1 ) ( 0 , 0 ) <PATH_END>

OUTPUT:
To find a path from the origin (2, 3) to the target (0, 0) in the provided maze, we can traverse the adjacency list. Here's the step-by-step path:

1. **Start at (2, 3)**: From here, we can move to (2, 2) based on the adjacency list.
2. **Move to (2, 2)**: From (2, 2), we have two options: (1, 2) or (2, 3) which we just came from. We choose to move to (1, 2).
3. **Move to (1, 2)**: From (1, 2), we can move to (1, 1) or back to (2, 2). We choose to go to (1, 1).
4. **Move to (1, 1)**: From (1, 1), we can go to (0, 1) or back to (1, 2). We choose to go to (0, 1).
5. **Move to (0, 1)**: From (0, 1), we can go to (0, 0) or back to (1, 1). We move to (0, 0).
6. **Move to (0, 0)**: We have reached the target.

Thus, the complete path from (2, 3) to (0, 0) is:
- (2, 3)
- (2, 2)
- (1, 2)
- (1, 1)
- (0, 1)
- (0, 0)

In summary, the path is:
<PATH_START> (2, 3) (2, 2) (1, 2) (1, 1) (0, 1) (0, 0) <PATH_END>.

HUMAN VERIFICATION: