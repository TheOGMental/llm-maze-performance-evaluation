INPUT:
<ADJLIST_START> (3,2) <--> (2,2) ; (2,1) <--> (2,2) ; (4,1) <--> (4,0) ; (1,2) <--> (1,1) ; (1,0) <--> (1,1) ; (4,2) <--> (4,3) ; (3,0) <--> (2,0) ; (0,2) <--> (1,2) ; (3,1) <--> (3,0) ; (4,1) <--> (4,2) ; (2,0) <--> (1,0) ; (3,1) <--> (2,1) ; (3,3) <--> (4,3) ; (3,3) <--> (3,2) ; <ADJLIST_END> <ORIGIN_START> (1,0) <ORIGIN_END> <TARGET_START> (1,2) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (1,0) (1,1) (1,2) <PATH_END>

OUTPUT:
To find a path from the origin (1,0) to the target (1,2) in the given maze, we can trace the connections based on the adjacency list. The path will be a sequence of coordinates, each representing a step in the maze.

Here's the step-by-step pathfinding process based on the provided adjacency list:

1. Start at the origin: (1,0).
2. From (1,0), we can move to (1,1).
3. From (1,1), we can move to (1,2), which is the target.

Thus, the path is:
- Start at (1,0)
- Move to (1,1)
- Move to (1,2)

So, the complete path from the origin to the target can be represented as:
```
(1,0) (1,1) (1,2)
```

Hence, the solution to the maze is:
```
<PATH_START> (1,0) (1,1) (1,2) <PATH_END>
```

HUMAN VERIFICATION: