INPUT:
<ADJLIST_START> (3,3) <--> (3,2) ; (2,1) <--> (3,1) ; (1,1) <--> (1,0) ; (4,2) <--> (3,2) ; (2,4) <--> (2,3) ; (2,0) <--> (1,0) ; (3,0) <--> (4,0) ; (1,4) <--> (0,4) ; (2,3) <--> (2,2) ; (2,0) <--> (3,0) ; (4,2) <--> (4,1) ; (1,2) <--> (1,3) ; (2,2) <--> (1,2) ; (4,1) <--> (3,1) ; (3,4) <--> (4,4) ; (1,4) <--> (1,3) ; (3,4) <--> (2,4) ; (2,1) <--> (1,1) ; (0,1) <--> (0,2) ; (4,4) <--> (4,3) ; (0,2) <--> (0,3) ; (3,3) <--> (4,3) ; (0,4) <--> (0,3) ; <ADJLIST_END> <ORIGIN_START> (4,4) <ORIGIN_END> <TARGET_START> (4,2) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (4,4) (4,3) (3,3) (3,2) (4,2) <PATH_END>

OUTPUT:
To find a path from the origin (4,4) to the target (4,2) in the given maze configuration, we can use the provided adjacency list to identify the connections between points. Let's outline the path step by step:

1. Start at (4,4).
2. Move to (4,3) - there is a connection: (4,4) <--> (4,3).
3. Move to (3,3) - there is a connection: (4,3) <--> (3,3).
4. Move to (3,2) - there is a connection: (3,3) <--> (3,2).
5. Move to (4,2) - there is a connection: (3,2) <--> (4,2).

Thus, the path from (4,4) to (4,2) is:
- (4,4)
- (4,3)
- (3,3)
- (3,2)
- (4,2)

The complete path is:
**(4,4) (4,3) (3,3) (3,2) (4,2)**

HUMAN VERIFICATION: