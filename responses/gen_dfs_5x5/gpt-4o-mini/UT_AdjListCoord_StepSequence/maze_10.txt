INPUT:
<ADJLIST_START> (4,4) <--> (3,4) ; (1,1) <--> (1,2) ; (1,2) <--> (1,3) ; (3,1) <--> (2,1) ; (0,4) <--> (1,4) ; (3,2) <--> (2,2) ; (2,0) <--> (2,1) ; (0,4) <--> (0,3) ; (2,4) <--> (1,4) ; (3,4) <--> (2,4) ; (3,2) <--> (4,2) ; (4,1) <--> (3,1) ; (1,0) <--> (1,1) ; (4,1) <--> (4,2) ; (2,0) <--> (1,0) ; (3,3) <--> (2,3) ; (0,3) <--> (1,3) ; (4,3) <--> (3,3) ; (4,4) <--> (4,3) ; <ADJLIST_END> <ORIGIN_START> (1,3) <ORIGIN_END> <TARGET_START> (0,3) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (1,3) (0,3) <PATH_END>

OUTPUT:
To navigate from the origin (1,3) to the target (0,3) in the given maze, we need to explore the adjacency list and establish a valid path. Here’s the breakdown of how to find the path:

1. Start at (1,3).
2. From (1,3), we can move to (1,2) or (0,3). Since (0,3) is the target, we can move directly to that position.

Thus, the path is:
- (1,3) → (0,3)

The complete path from origin to target in the maze is:
<PATH_START> (1,3) (0,3) <PATH_END>

HUMAN VERIFICATION: