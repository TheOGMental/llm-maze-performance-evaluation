INPUT:
<ADJLIST_START> (0,2) <--> (0,1) ; (0,1) <--> (0,0) ; (3,2) <--> (4,2) ; (3,0) <--> (2,0) ; (1,0) <--> (1,1) ; (1,2) <--> (2,2) ; (4,1) <--> (4,2) ; (3,1) <--> (4,1) ; (0,0) <--> (1,0) ; (0,2) <--> (1,2) ; (2,0) <--> (2,1) ; (1,1) <--> (2,1) ; (2,2) <--> (3,2) ; <ADJLIST_END> <ORIGIN_START> (0,2) <ORIGIN_END> <TARGET_START> (3,1) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (0,2) (1,2) (2,2) (3,2) (4,2) (4,1) (3,1) <PATH_END>

OUTPUT:
To find a path from the origin (0,2) to the target (3,1) using the given adjacency list of the maze, we can work our way through the connections. Here is a possible path:

1. Start at (0,2)
2. Move down to (1,2) since (0,2) <--> (1,2)
3. Move down to (2,2) since (1,2) <--> (2,2)
4. Move down to (3,2) since (2,2) <--> (3,2)
5. Move left to (3,1) since (3,2) <--> (3,1)

Thus, the path from (0,2) to (3,1) is as follows:

**Path:** (0,2) (1,2) (2,2) (3,2) (3,1)

HUMAN VERIFICATION: