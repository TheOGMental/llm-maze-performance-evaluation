INPUT:
<ADJLIST_START> (1,1) <--> NORTH (1,2) <--> NORTH (1,4) <--> NORTH (2,4) <--> NORTH (2,2) <--> SOUTH (3,0) <--> SOUTH (4,1) <--> NORTH (3,4) <--> SOUTH (0,2) <--> EAST (0,4) <--> WEST (1,2) <--> WEST (2,2) <--> EAST (2,4) <--> WEST (3,1) <--> WEST (3,2) <--> EAST (3,3) <--> EAST (4,2) <--> WEST (4,3) <--> WEST (4,3) <--> EAST <ADJLIST_END> <ORIGIN_START> (4,1) <ORIGIN_END> <TARGET_START> (0,3) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (4,1) EAST (4,2) EAST (4,3) EAST (4,4) NORTH (3,4) WEST (3,3) WEST (3,2) NORTH (2,2) EAST (2,3) EAST (2,4) NORTH (1,4) NORTH (0,4) WEST (0,3) <PATH_END>

OUTPUT:
To find a path from the origin (4,1) to the target (0,3) in the given maze, letâ€™s analyze the available routes using the adjacency list.

Starting from (4,1):
1. Move **NORTH** to (3,1).
2. Move **NORTH** to (2,1).
3. Move **NORTH** to (1,1).
4. Move **NORTH** to (0,1).
5. Move **EAST** to (0,2).
6. Move **EAST** to (0,3).

Thus, the path from the origin (4,1) to the target (0,3) is:
**(4,1) NORTH (3,1) NORTH (2,1) NORTH (1,1) NORTH (0,1) EAST (0,2) EAST (0,3)**. 

Here is the completed path:
<PATH_START> (4,1) NORTH (3,1) NORTH (2,1) NORTH (1,1) NORTH (0,1) EAST (0,2) EAST (0,3) <PATH_END>.

HUMAN VERIFICATION: