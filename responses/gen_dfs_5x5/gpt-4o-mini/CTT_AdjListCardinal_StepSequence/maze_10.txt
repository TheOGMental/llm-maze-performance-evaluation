INPUT:
<ADJLIST_START> ( 0 , 3 ) <--> SOUTH ( 1 , 4 ) <--> NORTH ( 1 , 0 ) <--> SOUTH ( 1 , 4 ) <--> SOUTH ( 2 , 1 ) <--> SOUTH ( 3 , 2 ) <--> NORTH ( 2 , 3 ) <--> SOUTH ( 2 , 4 ) <--> SOUTH ( 4 , 1 ) <--> NORTH ( 3 , 2 ) <--> SOUTH ( 4 , 3 ) <--> NORTH ( 3 , 4 ) <--> SOUTH ( 0 , 4 ) <--> WEST ( 1 , 0 ) <--> EAST ( 1 , 1 ) <--> EAST ( 1 , 3 ) <--> WEST ( 2 , 0 ) <--> EAST ( 4 , 2 ) <--> WEST ( 4 , 4 ) <--> WEST <ADJLIST_END> <ORIGIN_START> ( 1 , 3 ) <ORIGIN_END> <TARGET_START> ( 0 , 3 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 1 , 3 ) NORTH ( 0 , 3 ) <PATH_END>

OUTPUT:
To find a path from the origin (1, 3) to the target (0, 3) using the provided adjacency list, we can trace the connections according to the given directions. Here is a step-by-step pathfinding solution:

1. **Start at (1, 3)**.
2. Move **WEST** to (1, 2).
3. Move **NORTH** to (0, 2).
4. Move **EAST** to (0, 3).

Thus, the resulting path is:

<PATH_START> 
( 1 , 3 ) WEST ( 1 , 2 ) NORTH ( 0 , 2 ) EAST ( 0 , 3 ) 
<PATH_END>

HUMAN VERIFICATION: