INPUT:
<ADJLIST_START> ( 0 , 0 ) <--> SOUTH ( 1 , 1 ) <--> NORTH ( 1 , 0 ) <--> SOUTH ( 1 , 4 ) <--> SOUTH ( 2 , 0 ) <--> SOUTH ( 3 , 1 ) <--> NORTH ( 3 , 3 ) <--> NORTH ( 2 , 4 ) <--> SOUTH ( 0 , 0 ) <--> EAST ( 1 , 3 ) <--> WEST ( 1 , 3 ) <--> EAST ( 2 , 2 ) <--> WEST ( 2 , 2 ) <--> EAST ( 3 , 1 ) <--> WEST ( 3 , 3 ) <--> EAST <ADJLIST_END> <ORIGIN_START> ( 1 , 0 ) <ORIGIN_END> <TARGET_START> ( 1 , 1 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 1 , 0 ) NORTH ( 0 , 0 ) EAST ( 0 , 1 ) SOUTH ( 1 , 1 ) <PATH_END>

OUTPUT:
To find a path from the origin (1, 0) to the target (1, 1) in the given maze configuration, we can analyze the adjacency list provided.

Starting from the origin (1, 0), the only available direction is to move SOUTH to (1, 1). 

Thus, the path from origin to target is straightforward. Here is the solution:

```
<PATH_START>
( 1 , 0 ) SOUTH ( 1 , 1 )
<PATH_END>
```

This path directly reaches the target with a single step.

HUMAN VERIFICATION: