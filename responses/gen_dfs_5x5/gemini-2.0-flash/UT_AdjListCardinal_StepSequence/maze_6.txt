INPUT:
<ADJLIST_START> (1,0) <--> NORTH (1,1) <--> NORTH (0,2) <--> SOUTH (0,3) <--> SOUTH (0,4) <--> SOUTH (2,0) <--> NORTH (2,3) <--> NORTH (1,4) <--> SOUTH (3,1) <--> NORTH (2,2) <--> SOUTH (3,4) <--> NORTH (3,1) <--> SOUTH (4,2) <--> NORTH (3,3) <--> SOUTH (3,4) <--> SOUTH (0,1) <--> WEST (0,3) <--> EAST (1,1) <--> EAST (2,0) <--> EAST (2,2) <--> EAST (4,1) <--> EAST (4,4) <--> WEST <ADJLIST_END> <ORIGIN_START> (0,0) <ORIGIN_END> <TARGET_START> (1,3) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> (0,0) SOUTH (1,0) SOUTH (2,0) EAST (2,1) SOUTH (3,1) SOUTH (4,1) EAST (4,2) NORTH (3,2) NORTH (2,2) EAST (2,3) NORTH (1,3) <PATH_END>

OUTPUT:
Here's a path from the origin (0,0) to the target (1,3) based on the provided maze configuration:

**Path:**

(0,0) SOUTH (1,0) NORTH (1,1) EAST (0,1) WEST (0,2) SOUTH (0,3) EAST (1,1) NORTH (1,2) NORTH (0,2) SOUTH (0,3) WEST (1,3)

**Explanation:**

The solution was obtained by starting from the origin and following edges in the adjacency list until the target was reached.



HUMAN VERIFICATION: