INPUT:
<ADJLIST_START> ( 0 , 4 ) <--> SOUTH ( 2 , 0 ) <--> NORTH ( 2 , 1 ) <--> NORTH ( 2 , 2 ) <--> NORTH ( 3 , 0 ) <--> NORTH ( 2 , 1 ) <--> SOUTH ( 3 , 4 ) <--> NORTH ( 3 , 0 ) <--> SOUTH ( 4 , 1 ) <--> NORTH ( 3 , 2 ) <--> SOUTH ( 4 , 3 ) <--> NORTH ( 4 , 4 ) <--> NORTH ( 0 , 2 ) <--> WEST ( 0 , 3 ) <--> WEST ( 0 , 3 ) <--> EAST ( 1 , 1 ) <--> WEST ( 1 , 2 ) <--> EAST ( 1 , 4 ) <--> WEST ( 2 , 3 ) <--> WEST ( 2 , 3 ) <--> EAST ( 3 , 3 ) <--> WEST ( 4 , 2 ) <--> WEST ( 4 , 3 ) <--> EAST <ADJLIST_END> <ORIGIN_START> ( 4 , 4 ) <ORIGIN_END> <TARGET_START> ( 4 , 2 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 4 , 4 ) WEST ( 4 , 3 ) NORTH ( 3 , 3 ) WEST ( 3 , 2 ) SOUTH ( 4 , 2 ) <PATH_END>

OUTPUT:
Here's a path from the origin (4,4) to the target (4,2) based on the provided maze configuration:

<PATH_START> ( 4 , 4 ) NORTH ( 3 , 4 ) NORTH ( 2 , 4 ) WEST ( 2 , 3 ) SOUTH ( 3 , 3 ) WEST ( 3 , 2 ) SOUTH ( 4 , 2 ) <PATH_END>

HUMAN VERIFICATION: F