INPUT:
<ADJLIST_START> ( 1 , 1 ) <--> NORTH ( 1 , 2 ) <--> NORTH ( 0 , 4 ) <--> SOUTH ( 2 , 4 ) <--> NORTH ( 2 , 2 ) <--> SOUTH ( 4 , 0 ) <--> NORTH ( 3 , 1 ) <--> SOUTH ( 4 , 4 ) <--> NORTH ( 0 , 2 ) <--> EAST ( 0 , 4 ) <--> WEST ( 1 , 2 ) <--> WEST ( 2 , 3 ) <--> WEST ( 2 , 3 ) <--> EAST ( 3 , 1 ) <--> WEST ( 3 , 2 ) <--> EAST ( 3 , 3 ) <--> EAST ( 4 , 1 ) <--> EAST ( 4 , 3 ) <--> WEST ( 4 , 4 ) <--> WEST <ADJLIST_END> <ORIGIN_START> ( 4 , 1 ) <ORIGIN_END> <TARGET_START> ( 0 , 3 ) <TARGET_END> 

EXPECTED SOLUTION:
<PATH_START> ( 4 , 1 ) EAST ( 4 , 2 ) EAST ( 4 , 3 ) EAST ( 4 , 4 ) NORTH ( 3 , 4 ) WEST ( 3 , 3 ) WEST ( 3 , 2 ) NORTH ( 2 , 2 ) EAST ( 2 , 3 ) EAST ( 2 , 4 ) NORTH ( 1 , 4 ) NORTH ( 0 , 4 ) WEST ( 0 , 3 ) <PATH_END>

OUTPUT:
I am sorry, but the provided maze configuration is not valid, specifically the adjacency list. An adjacency list describes the neighbors of a node in a graph, along with the direction to reach that neighbor. However, the provided adjacency list does not define the neighbors for each node. Therefore, I cannot generate a path from the origin to the target.


HUMAN VERIFICATION: